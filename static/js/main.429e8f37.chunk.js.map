{"version":3,"sources":["components/timeline/Timeline.module.css","components/header/Header.module.css","components/message/Message.module.css","components/header/index.js","components/message/index.js","components/timeline/index.js","modules/player/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","user","status","timestamp","className","cx","style","header","moment","unix","format","details","avatar","backgroundImage","title","name","lastSeen","Message","text","align","bobble","mainUser","boobleInner","renderEntry","entry","type","caption","captionInner","description","message","renderMessage","Timeline","entries","isBuffering","inputText","main","messageWindow","map","loader","inputBox","Player","actorId","timeline","this","_eventHandlers","Map","_actorId","_flattenTimeline","_nextMessage","_timeline","_playState","playFrom","entryId","get","dispatch","switchContext","parseInt","uid","send","delay","receive","setTimeout","_typeMessage","content","data","then","emit","_setNextMessage","_bufferMessage","context","event","callback","has","set","push","filteredHandlers","filter","handler","payload","forEach","apply","Promise","resolve","letterIndex","intervalRef","setInterval","length","clearInterval","duration","keys","Array","from","nextKeyIndex","indexOf","flatTimeline","prototype","events","App","recipient","story","users","id","main_user_id","pop","useState","updateEntries","updateBufferState","updateInputText","Date","now","updateTimestamp","updateStatus","useEffect","player","on","prevInputText","prevEntries","character","play","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.429e8f37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Timeline_main__2ME79\",\"username\":\"Timeline_username__PRBkx\",\"messageWindow\":\"Timeline_messageWindow__AmH5J\",\"inputBox\":\"Timeline_inputBox__2wi8d\",\"caption\":\"Timeline_caption__2aekk\",\"captionInner\":\"Timeline_captionInner__1r14r\",\"loader\":\"Timeline_loader__2oDsm\",\"up-down\":\"Timeline_up-down__cKBJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1MOL-\",\"details\":\"Header_details__3Q1mh\",\"avatar\":\"Header_avatar__Hhfmo\",\"title\":\"Header_title__3_fub\",\"lastSeen\":\"Header_lastSeen__SMPbV\",\"status\":\"Header_status__2qA-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bobble\":\"Message_bobble__1gGcm\",\"mainUser\":\"Message_mainUser__29rQH\",\"boobleInner\":\"Message_boobleInner__yTQxb\",\"username\":\"Message_username__mYsf7\"};","import React from 'react';\nimport style from './Header.module.css';\nimport moment from 'moment';\nimport cx from 'classnames';\n\n\nconst Header = ({user, status, timestamp}) => {\n\n    return (\n        <div className={cx(style.header)}>\n        <div className={cx(style.status)}>\n            <div className={cx()}>{moment.unix(timestamp).format(\"HH:mm\")}</div>\n        </div>\n        <div className={cx(style.details)}>\n            <div className={cx(style.avatar)} style={{backgroundImage:`url(${user.avatar})`}}></div>\n            <p className={cx(style.title)}>{user.name}</p>\n            <p className={cx(style.lastSeen)}>{status}</p>\n\n        </div>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport style from './Message.module.css';\nimport cx from 'classnames';\n\nconst Message = ({text, align}) => {\n  if(text === ''){\n    return null;\n  }\n  return (\n      <div className={cx(style.bobble, {[style.mainUser]: align === 'right'})}>\n          <div className={style.boobleInner}>\n              <div>\n                  {text}\n              </div>\n          </div>\n      </div>\n  );\n};\n\nexport default Message;\n","import React from 'react';\nimport style from './Timeline.module.css';\nimport Message from '../message';\n\nconst renderEntry = entry => {\n  if(entry.type === 'context'){\n    return (\n      <div className={style.caption}>\n          <div className={style.captionInner}>\n          {entry.description}\n          </div>\n      </div>\n    );\n  }\n\n  return renderMessage(entry);\n}\n\nfunction renderMessage(entry) {\n  return (<Message text={entry.message} align={entry.align} />);\n}\n\nconst Timeline = ({entries, isBuffering, inputText}) => {\n  return (\n    <div className={style.main}>\n      <div className={style.messageWindow}>\n        {entries.map(renderEntry)}\n        {isBuffering ? renderBufferMessage() : null}\n      </div>   \n      <div className={style.inputBox}> \n        <p>{inputText}</p>\n        <button type='button'>send</button>\n      </div> \n    </div>\n  );\n}\n\nfunction renderBufferMessage(){\n  return <Message text={\n      <>\n      <span className={style.loader}/>\n      <span className={style.loader}/>\n      <span className={style.loader}/>\n      </>\n      }\n  />\n}\n\nexport default Timeline;\n","export default class Player{\n  constructor(actorId, timeline){\n    this._eventHandlers = new Map();\n    this._actorId = actorId;\n    [this._nextMessage, this._timeline] = this._flattenTimeline(timeline);\n    this._playState = 0;\n  }\n\n  play(){\n    this._playState = 1;\n    this.playFrom(this._nextMessage);\n  }\n\n  pause(){\n    this._playState = 0;\n  }\n\n  playFrom(entryId){\n    if(this._playState === 1 && !!this._nextMessage){\n      const message = this._timeline.get(this._nextMessage);\n      this.dispatch(message);\n    }\n  }\n\n  dispatch(message){\n    if(message.type === 'context'){\n      this.switchContext(message);\n    }\n    else if(parseInt(message.uid) === this._actorId){\n      this.send(message, message.delay);\n    }\n    else{\n      this.receive(message, message.delay);\n    }\n  }\n\n  send(message,delay=500){\n    setTimeout(() => {\n      this._typeMessage(message.content.data)\n      .then(() => {\n        this.emit('send', [message]);\n        this._setNextMessage();\n        this.playFrom(this._nextMessage);\n      });\n    },delay);\n  }\n\n  receive(message,delay=500){\n    setTimeout(() => {\n      this._bufferMessage()\n      .then(() => {\n        this.emit('receive', [message]);\n        this._setNextMessage();\n        this.playFrom(this._nextMessage);\n      })\n    },delay);\n  }\n\n  switchContext(context){\n    this.emit('context-changed', [context]);\n    this._setNextMessage();\n    this.playFrom(this._nextMessage);\n  }\n\n  on(event, callback){\n    if(!this._eventHandlers.has(event)){\n      this._eventHandlers.set(event,[]);\n    }\n\n    return this._eventHandlers.get(event).push(callback); \n  }\n\n  off(event, callback){\n    const filteredHandlers = this._eventHandlers.get(event)\n      .filter(handler => {\n        return handler !== callback;\n      });\n\n    this._eventHandlers.set(event,filteredHandlers);\n  }\n\n  emit(event,payload){\n    const handlers = this._eventHandlers.get(event);\n    handlers.forEach(handler => {\n      handler.apply(null,payload);\n    });\n  }\n\n  _typeMessage(text){\n    return new Promise(resolve => {\n      let letterIndex = 0;\n      const intervalRef = setInterval(() => {\n        if(letterIndex === text.length){\n          clearInterval(intervalRef);\n          resolve();\n        }\n\n        this.emit('text-input', [text[letterIndex]]);\n        letterIndex++;\n      },90)\n    })\n  }\n\n  _bufferMessage(duration = 3000){\n    return new Promise(resolve => {\n      this.emit('incoming');\n      setTimeout(resolve, duration);\n    })\n  }\n\n  _setNextMessage(){\n    const keys = Array.from(this._timeline.keys());\n    const nextKeyIndex = (keys.indexOf(this._nextMessage) + 1);\n    if(nextKeyIndex < keys.length){\n      this._nextMessage = keys[nextKeyIndex];\n    }else{\n      this._nextMessage = null;\n    }\n  }\n\n  _flattenTimeline(timeline){\n    const flatTimeline = new Map();\n    // eslint-disable-next-line no-unused-vars\n    for(const entry of timeline){\n      flatTimeline.set(entry.timestamp,entry);\n    }\n\n    return [\n      timeline[0].timestamp,\n      flatTimeline\n    ]\n  }\n}\n\nPlayer.prototype.events = [\n  'send','receive','context-changed','text-input','incoming'\n]","import React, { useState, useEffect } from 'react';\n\nimport Header from './components/header';\nimport Timeline from './components/timeline';\nimport data from './examples/lost-phone.json';\nimport Player from './modules/player';\nimport './App.css';\n\nfunction App() {\n  const recipient = [...data.story.users]\n    .filter(user => user.id !== data.story.main_user_id)\n    .pop();\n  const [entries, updateEntries] = useState([]);\n  const [isBuffering, updateBufferState] = useState(false);\n  const [inputText,updateInputText] = useState('');\n  const [timestamp, updateTimestamp] = useState(Date.now());\n  const [status,updateStatus] = useState('last seen yesterday');\n\n  useEffect(() => {\n    const player = new Player(data.story.main_user_id, data.story.timeline);\n\n    player.on('send', message => {\n      updateInputText(prevInputText => {\n        return '';\n      });\n      updateTimestamp(message.timestamp); \n      updateEntries(prevEntries => {\n        return [...prevEntries, {\n          message: message.content.data,\n          align: 'right'\n        }];\n      }); \n    });\n\n    player.on('receive', message => {\n      updateBufferState(false);\n      updateTimestamp(message.timestamp);\n      updateEntries(prevEntries => {\n        return [...prevEntries, {\n          message: message.content.data,\n          align: 'left'\n        }];\n      }); \n    });\n\n    player.on('text-input', character => {\n      updateInputText(prevInputText => {\n        return prevInputText + character;\n      }); \n    });\n\n    player.on('context-changed', context => {\n      updateTimestamp(context.timestamp);\n      updateEntries(prevEntries => {\n        return [...prevEntries, context];\n      });\n    });\n\n    player.on('incoming', () => {\n      updateBufferState(true);\n      updateStatus('online');\n    });\n\n    player.play();\n  },[]);\n\n  return (\n    <div className=\"App\">\n      <Header\n        user={recipient}\n        timestamp={timestamp}\n        status={status}\n          />\n      <Timeline\n        entries={entries}\n        isBuffering={isBuffering}\n        inputText={inputText} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}